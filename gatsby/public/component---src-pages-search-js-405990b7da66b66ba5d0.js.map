{"version":3,"sources":["webpack:///./src/pages/search.js","webpack:///./src/components/ComedianList.js"],"names":["SearchPage","data","location","comedians","nodes","searchTerm","search","length","charAt","slice","filter","comedian","regex","RegExp","toLowerCase","test","firstName","lastName","title","query","ComedianListStyles","styled","div","ComedianList","isComedians","className","map","to","slug","current","key","id","fluid","profPic","asset","alt"],"mappings":"4FAAA,sIAKe,SAASA,EAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACnCC,EAAYF,EAAKE,UAAUC,MAE3BC,EAAaH,EAASI,OAe1B,OAbID,EADDA,EAAWE,OAAS,GAA8B,MAAzBF,EAAWG,OAAO,GAC7BH,EAAWI,MAAM,GAEjB,QAIbN,EAAYA,EAAUO,QAAO,SAAAC,GACzB,IAAMC,EAAQ,IAAIC,OAAOR,EAAWS,eAEpC,OADcF,EAAMG,KAAKJ,EAASK,UAAUF,gBAAkBF,EAAMG,KAAKJ,EAASM,SAASH,mBAM/F,oCACI,kBAAC,IAAD,CAAKI,MAAM,WACX,kBAAC,IAAD,CAAcf,UAAWA,EAAWE,WAAYA,KAKrD,IAAMc,EAAK,c,kCC/BlB,oHAMMC,EAAqBC,IAAOC,IAAV,mFAAGD,CAAH,00BA2DXE,EAAe,SAAC,GAA+B,IAA7BpB,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WAChCmB,EAAcrB,EAAUI,OAAS,EACvC,OACI,kBAACa,EAAD,KACI,yBAAKK,UAAU,WACVtB,EAAUuB,KAAI,SAAAf,GACX,OACI,kBAAC,IAAD,CAAMgB,GAAE,aAAehB,EAASiB,KAAKC,QAAWJ,UAAU,mBAAmBK,IAAKnB,EAASoB,IACvF,kBAAC,IAAD,CAAKN,UAAU,QAAQO,MAAOrB,EAASsB,QAAQC,MAAMF,MAAOG,IAAQxB,EAASK,UAAd,IAA2BL,EAASM,WACnG,yBAAKQ,UAAU,yBACX,8BAAOd,EAASK,WAChB,8BAAOL,EAASM,iBAMlCO,GACE,yBAAKC,UAAU,sBACX,kBAAC,IAAD,CAAUA,UAAU,gBACpB,iDAAuBpB,EAAU,iBAAoBA,EAApB,IAAoC,GAArE","file":"component---src-pages-search-js-405990b7da66b66ba5d0.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { ComedianList } from '../components/ComedianList';\nimport SEO from '../components/SEO';\n\nexport default function SearchPage({ data, location }) {\n    let comedians = data.comedians.nodes;\n\n    let searchTerm = location.search;\n    if(searchTerm.length > 3 && searchTerm.charAt(2) === '='){\n        searchTerm = searchTerm.slice(3);\n    } else {\n        searchTerm = null;\n    }\n\n    if(searchTerm){\n        comedians = comedians.filter(comedian => {\n            const regex = new RegExp(searchTerm.toLowerCase());\n            const match = regex.test(comedian.firstName.toLowerCase()) || regex.test(comedian.lastName.toLowerCase());\n            return match;\n        })\n    }\n\n    return (\n        <>\n            <SEO title=\"Search\" />\n            <ComedianList comedians={comedians} searchTerm={searchTerm} />\n        </>\n    )\n}\n\nexport const query = graphql`\n    query searchComedians {\n        comedians: allSanityComedian(sort: {fields: lastName}) {\n            nodes {\n                id\n                firstName\n                lastName\n                slug {\n                    current\n                }\n                profPic {\n                    asset {\n                        fluid {\n                            ...GatsbySanityImageFluid\n                        }  \n                    }\n                }\n            }\n        }\n    }\n`;","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { BiSearch } from 'react-icons/bi';\n\nconst ComedianListStyles = styled.div`\n    .wrapper {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(15vw, 1fr));\n        gap: 2rem 1rem;\n        @media (max-width: 800px){\n            grid-template-columns: repeat(auto-fill, minmax(25vw, 1fr));\n        }\n        .comedian-wrapper {\n            position: relative;\n            width: min(15vw, 25vw);\n            height: min(15vw, 25vw);\n            border-radius: 4px;\n            border: 2px solid #0a1930;\n            transition: all 0.6s;\n            @media (max-width: 800px){\n                width: min(25vw, 30vw);\n                height: min(25vw, 30vw);\n            }\n            &:hover {\n                border: 2px solid #64ffda;\n            }\n            .image {\n                width: 100%;\n                height: 100%;\n                object-fit: cover;\n                border-radius: 2px;\n            }\n            .comedian-name-wrapper {\n                position: absolute;\n                left: 2px;\n                bottom: 2px;\n                display: flex;\n                flex-wrap: wrap;\n                span {\n                    background: #283038;\n                    padding: 0.3rem;\n                    font-size: 1.2rem;\n                    text-transform: uppercase;\n                }\n            }\n        }\n    }\n    .no-comedians-found {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        gap: 1rem;\n        align-items: center;\n        .search-icon {\n            font-size: 2rem;\n        }\n        h2 {\n            font-size: 1.8rem;\n            padding: 1rem;\n            background: #172a45;\n        }\n    }\n`;\n\nexport const ComedianList = ({ comedians, searchTerm }) => {\n    const isComedians = comedians.length > 0;\n    return (\n        <ComedianListStyles>\n            <div className=\"wrapper\">\n                {comedians.map(comedian => {\n                    return (\n                        <Link to={`/comedian/${comedian.slug.current}`} className=\"comedian-wrapper\" key={comedian.id}>\n                            <Img className=\"image\" fluid={comedian.profPic.asset.fluid} alt={`${comedian.firstName} ${comedian.lastName}`} />\n                            <div className=\"comedian-name-wrapper\">\n                                <span>{comedian.firstName}</span>\n                                <span>{comedian.lastName}</span>\n                            </div>\n                        </Link>\n                    )\n                })}\n            </div>\n            {!isComedians && (\n                <div className=\"no-comedians-found\">\n                    <BiSearch className=\"search-icon\" />\n                    <h2>No comedians found{searchTerm ? ` for keyword \"${searchTerm}\"` : ''}!</h2>\n                </div>\n            )}\n        </ComedianListStyles>\n    )\n}\n"],"sourceRoot":""}